apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: code-server
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "internal"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.sko.ai/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.sko.ai/oauth2/start"
spec:
  rules:
  - host: code.sko.ai
    http:
      paths:
      - backend:
          serviceName: code-server
          servicePort: 8443
        path: /
  tls:
  - hosts:
    - code.sko.ai
    secretName: ingress-cert-code
---
apiVersion: v1
kind: Service
metadata:
  name: code-server
spec:
  ports:
  - protocol: TCP
    port: 8443
    targetPort: 8443
  selector:
    app: code-server
  type: LoadBalancer
  loadBalancerIP: 192.168.1.27
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: code-server
spec:
  selector:
    matchLabels:
      app: code-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: code-server
    spec:
      containers:
      - image: linuxserver/code-server:v3.5.0-ls48
        name: code-server
        env:
        - name: SUDO_PASSWORD
          value: toor
        envFrom:
        - secretRef:
            name: secret-code-server
        ports:
        - containerPort: 8443
          name: code-server
        volumeMounts:
        - name: pv-code-server
          mountPath: /config
      volumes:
      - name: pv-code-server
        persistentVolumeClaim:
          claimName: code-server
